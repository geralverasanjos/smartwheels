rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Allow users to create and manage their own profiles
    match /passengers/{userId} {
      allow create: if request.auth != null && request.resource.data.id == request.auth.uid;
      allow read, update: if request.auth != null && request.auth.uid == userId;
    }

    match /drivers/{userId} {
      allow create: if request.auth != null && request.resource.data.id == request.auth.uid;
      allow read, update: if request.auth != null && request.auth.uid == userId;
    }
    
    match /fleet-managers/{userId} {
       allow create: if request.auth != null && request.resource.data.id == request.auth.uid;
       allow read, update: if request.auth != null && request.auth.uid == userId;
    }

    // Taxi Stands can be managed by any authenticated user
    match /stands/{standId} {
      allow read, write: if request.auth != null;
    }

    // Ride Requests: Can be created by any auth'd user.
    // Can be read/updated by the passenger who created it or the driver assigned to it.
    match /rideRequests/{requestId} {
      allow read: if request.auth != null && (request.auth.uid == resource.data.passengerId || request.auth.uid == resource.data.driverId);
      allow create: if request.auth != null;
      allow update: if request.auth != null && (request.auth.uid == resource.data.passengerId || request.auth.uid == resource.data.driverId);
    }
    
    // Messages: Can be read by users involved in the associated ride request.
    match /messages/{messageId} {
      // Allow read if the user is the sender or part of the ride request.
      allow read: if request.auth != null && (request.auth.uid == resource.data.senderId || get(/databases/$(database)/documents/rideRequests/$(resource.data.rideId)).data.passengerId == request.auth.uid || get(/databases/$(database)/documents/rideRequests/$(resource.data.rideId)).data.driverId == request.auth.uid);
      
      // Only the authenticated sender can create a message.
      allow create: if request.auth != null && request.resource.data.senderId == request.auth.uid;
    }

    // Other collections can be configured here
    // e.g. match /vehicles/{vehicleId} { ... }
  }
}
