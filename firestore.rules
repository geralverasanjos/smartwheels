
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isUserAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    match /passengers/{userId} {
      allow create: if isUserAuthenticated() && isOwner(request.resource.data.id);
      allow read, update: if isUserAuthenticated() && isOwner(userId);
    }
    
    match /drivers/{userId} {
      allow create: if isUserAuthenticated() && isOwner(request.resource.data.id);
      allow read, update: if isUserAuthenticated() && isOwner(userId);
      // Fleet manager can also read driver data
      allow get: if isUserAuthenticated() && resource.data.fleetManagerId == request.auth.uid;
    }

    match /fleet-managers/{userId} {
      allow create: if isUserAuthenticated() && isOwner(request.resource.data.id);
      allow read, update: if isUserAuthenticated() && isOwner(userId);
    }

    match /stands/{standId} {
      allow read, write: if isUserAuthenticated();
    }
    
    match /transactions/{transactionId} {
      allow read: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }
  }
}
